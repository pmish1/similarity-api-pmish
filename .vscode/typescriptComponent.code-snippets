{
    // Place your snippets for typescriptreact here. Each snippet is defined under a snippet name and has a prefix, body and
    // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
    // same ids are connected.
    // Example:
    // "Print to console": {
    // 	"prefix": "log",
    // 	"body": [
    // 		"console.log('$1');",
    // 		"$2"
    // 	],
    // 	"description": "Log output to console"
    // }
   
    "Typescript React Function Component": {
      "prefix": "fc",
      "body": [
        "import { FC } from 'react'",
        "",
        "interface ${TM_FILENAME_BASE}Props {",
        "  $1",
        "}",
        "",
        "const $TM_FILENAME_BASE: FC<${TM_FILENAME_BASE}Props> = ({$2}) => {",
        "  return <div>$TM_FILENAME_BASE</div>",
        "}",
        "",
        "export default $TM_FILENAME_BASE"
      ],
      "description": "Typescript React Function Component"
    },
    // "useEffect Snippet": {
    //   "prefix": "effect",
    //   "body": ["useEffect(() => {", "  $1", "}, [$2])"],
    //   "description": "useEffect snippet"
    // },
    // "useState Snippet": {
    //   "prefix": "state",
    //   "body": ["const [$1, set${1/(.*)/${1:/capitalize}/}] = useState<$2>($3)"],
    //   "description": "useState snippet"
    // },
    // "useRef Snippet": {
    //   "prefix": "ref",
    //   "body": ["const $1 = useRef<$2>($3)"],
    //   "description": "useRef snippet"
    // },
    // "useCallback Snippet": {
    //   "prefix": "callback",
    //   "body": ["const $1 = useCallback(($2) => {", "  $3", "}, [$4])"],
    //   "description": "useCallback snippet"
    // }
  }